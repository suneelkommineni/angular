{
  "version": 3,
  "file": "ng2-datepicker.js",
  "sources": [
    "ng://ng2-datepicker/out/src/ng-datepicker/module/ng-datepicker.module.ts",
    "ng://ng2-datepicker/out/src/ng-datepicker/component/ng-datepicker.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgSlimScrollModule } from 'ngx-slimscroll';\nimport { NgDatepickerComponent } from '../component/ng-datepicker.component';\n\n@NgModule({\n  declarations: [ NgDatepickerComponent ],\n  imports: [ CommonModule, FormsModule, NgSlimScrollModule ],\n  exports: [ NgDatepickerComponent, CommonModule, FormsModule, NgSlimScrollModule ]\n})\nexport class NgDatepickerModule { }\n",
    "import { Component, OnInit, Input, OnChanges, SimpleChanges, ElementRef, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {\n  startOfMonth,\n  endOfMonth,\n  addMonths,\n  subMonths,\n  setYear,\n  eachDay,\n  getDate,\n  getMonth,\n  getYear,\n  isToday,\n  isSameDay,\n  isSameMonth,\n  isSameYear,\n  format,\n  getDay,\n  subDays,\n  setDay\n} from 'date-fns';\nimport { ISlimScrollOptions } from 'ngx-slimscroll';\n\nexport type AddClass = string | string[] | { [k: string]: boolean } | null;\n\nexport interface DatepickerOptions {\n  minYear?: number; // default: current year - 30\n  maxYear?: number; // default: current year + 30\n  displayFormat?: string; // default: 'MMM D[,] YYYY'\n  barTitleFormat?: string; // default: 'MMMM YYYY'\n  dayNamesFormat?: string; // default 'ddd'\n  barTitleIfEmpty?: string;\n  firstCalendarDay?: number; // 0 = Sunday (default), 1 = Monday, ..\n  locale?: object;\n  minDate?: Date;\n  maxDate?: Date;\n  /** Placeholder for the input field */\n  placeholder?: string;\n  /** [ngClass] to add to the input field */\n  addClass?: AddClass;\n  /** [ngStyle] to add to the input field */\n  addStyle?: { [k: string]: any } | null;\n  /** ID to assign to the input field */\n  fieldId?: string;\n  /** If false, barTitleIfEmpty will be disregarded and a date will always be shown. Default: true */\n  useEmptyBarTitle?: boolean;\n}\n\n// Counter for calculating the auto-incrementing field ID\nlet counter = 0;\n\n/**\n * Internal library helper that helps to check if value is empty\n * @param value\n */\nconst isNil = (value: Date | DatepickerOptions) => {\n  return (typeof value === 'undefined') || (value === null);\n};\n\n@Component({\n  selector: 'ng-datepicker',\n  template: `<div class=\"ngx-datepicker-container\">\n  <input type=\"text\" *ngIf=\"!headless\" class=\"ngx-datepicker-input\" [(ngModel)]=\"displayValue\" readonly [placeholder]=\"placeholder\"\n    [ngClass]=\"addClass\" [ngStyle]=\"addStyle\" [id]=\"fieldId\" [disabled]=\"disabled\" (click)=\"toggle()\" />\n  <ng-content></ng-content>\n  <div class=\"ngx-datepicker-calendar-container ngx-datepicker-position-{{position}}\" *ngIf=\"isOpened\">\n    <div class=\"topbar-container\">\n      <svg width=\"7px\" height=\"10px\" viewBox=\"0 0 7 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        (click)=\"prevMonth()\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g transform=\"translate(-923.000000, -1882.000000)\" fill=\"#CED0DA\">\n            <g transform=\"translate(80.000000, 1361.000000)\">\n              <g transform=\"translate(0.000000, 430.000000)\">\n                <g transform=\"translate(825.000000, 0.000000)\">\n                  <g transform=\"translate(0.000000, 72.000000)\">\n                    <g transform=\"translate(18.000000, 15.000000)\">\n                      <polygon id=\"Back\" points=\"6.015 4 0 9.013 6.015 14.025\"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n      <span class=\"topbar-title\" (click)=\"toggleView()\">{{ barTitle }}</span>\n      <svg width=\"7px\" height=\"10px\" viewBox=\"0 0 6 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        (click)=\"nextMonth()\">\n        <g id=\"Source-Sans---UI-Elements-Kit\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"White-Layout\" transform=\"translate(-1182.000000, -1882.000000)\" fill=\"#CED0DA\">\n            <g id=\"Dropdowns-&amp;-Selector\" transform=\"translate(80.000000, 1361.000000)\">\n              <g id=\"Dropdowns\" transform=\"translate(0.000000, 430.000000)\">\n                <g id=\"Calendar\" transform=\"translate(825.000000, 0.000000)\">\n                  <g transform=\"translate(0.000000, 72.000000)\" id=\"Top-Bar-Nav\">\n                    <g transform=\"translate(18.000000, 15.000000)\">\n                      <polygon id=\"Forward\" transform=\"translate(262.007500, 9.012500) scale(-1, 1) translate(-262.007500, -9.012500) \" points=\"265.015 4 259 9.013 265.015 14.025\"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n    <div class=\"main-calendar-container\" *ngIf=\"view === 'days'\">\n      <div class=\"main-calendar-day-names\">\n        <span class=\"day-name-unit\" *ngFor=\"let name of dayNames\">{{ name }}</span>\n      </div>\n      <div class=\"main-calendar-days\">\n        <span class=\"day-unit\" *ngFor=\"let day of days; let i = index;\" [ngClass]=\"{ 'is-prev-month': !day.inThisMonth, 'is-today': day.isToday, 'is-selected': day.isSelected, 'is-disabled': !day.isSelectable }\"\n          (click)=\"day.isSelectable && setDate(i)\">\n          {{ day.day }}\n        </span>\n      </div>\n    </div>\n    <div class=\"main-calendar-container\" *ngIf=\"view === 'years'\">\n      <div class=\"main-calendar-years\" slimScroll [options]=\"scrollOptions\">\n        <span class=\"year-unit\" *ngFor=\"let year of years; let i = index;\" [ngClass]=\"{ 'is-selected': year.isThisYear }\" (click)=\"setYear(i)\">{{ year.year }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.ngx-datepicker-position-bottom-left{top:40px;right:0}.ngx-datepicker-position-bottom-right{top:40px;left:0}.ngx-datepicker-position-top-left{bottom:40px;right:0}.ngx-datepicker-position-top-right{bottom:40px;left:0}.ngx-datepicker-container{position:relative}.ngx-datepicker-container .ngx-datepicker-input{padding:5px 10px;font-size:14px;width:200px;outline:0;border:1px solid #dfe3e9}.ngx-datepicker-container .ngx-datepicker-calendar-container{position:absolute;width:300px;background:#fff;-webkit-box-shadow:0 1px 4px 0 rgba(0,0,0,.08);box-shadow:0 1px 4px 0 rgba(0,0,0,.08);border:1px solid #dfe3e9;border-radius:4px}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container{width:100%;height:50px;padding:15px;border-bottom:1px solid #dfe3e9;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container svg{cursor:pointer}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container svg g{fill:#ced0da}.ngx-datepicker-container .ngx-datepicker-calendar-container .topbar-container .topbar-title{color:#3d495c;font-size:14px;font-weight:600;cursor:pointer}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container{width:100%;height:100%;padding:15px 10px 0;font-size:12px;font-weight:500}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-day-names{color:#a4a9b1;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-day-names .day-name-unit{width:calc(100% / 7);text-transform:uppercase;text-align:center}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years{padding:15px 0;width:100%;display:inline-block;max-height:275px;overflow:hidden}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 7);height:40px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;float:left;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:50%;color:#3d495c}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-prev-month,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-prev-month{color:#a4a9b1}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-today,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit:hover{background:#a4a9b1;color:#fff}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-selected,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-selected{background:#1a91eb;color:#fff}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled{cursor:not-allowed;color:#a4a9b1}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled:hover,.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled:hover{background:0 0}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years{height:210px;display:block;padding:0}.ngx-datepicker-container .ngx-datepicker-calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 3);border-radius:10px}`],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgDatepickerComponent), multi: true }\n  ]\n})\nexport class NgDatepickerComponent implements ControlValueAccessor, OnInit, OnChanges {\n  @Input() options: DatepickerOptions;\n\n  /**\n   * Disable datepicker's input\n   */\n  @Input() headless = false;\n\n  /**\n   * Set datepicker's visibility state\n   */\n  @Input() isOpened = false;\n\n  /**\n   * Datepicker dropdown position\n   */\n  @Input() position = 'bottom-right';\n\n  private positions = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n\n  innerValue: Date;\n  displayValue: string;\n  displayFormat: string;\n  date: Date;\n  barTitle: string;\n  barTitleFormat: string;\n  barTitleIfEmpty: string;\n  minYear: number;\n  maxYear: number;\n  firstCalendarDay: number;\n  view: string;\n  years: { year: number; isThisYear: boolean }[];\n  dayNames: string[];\n  dayNamesFormat: string;\n  scrollOptions: ISlimScrollOptions;\n  days: {\n    date: Date;\n    day: number;\n    month: number;\n    year: number;\n    inThisMonth: boolean;\n    isToday: boolean;\n    isSelected: boolean;\n    isSelectable: boolean;\n  }[];\n  locale: object;\n  placeholder: string;\n  addClass: AddClass;\n  addStyle: { [k: string]: any } | null;\n  fieldId: string;\n  useEmptyBarTitle: boolean;\n  disabled: boolean;\n\n  private onTouchedCallback: () => void = () => { };\n  private onChangeCallback: (_: any) => void = () => { };\n\n  public setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  get value(): Date {\n    return this.innerValue;\n  }\n\n  set value(val: Date) {\n    this.innerValue = val;\n    this.onChangeCallback(this.innerValue);\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.scrollOptions = {\n      barBackground: '#DFE3E9',\n      gridBackground: '#FFFFFF',\n      barBorderRadius: '3',\n      gridBorderRadius: '3',\n      barWidth: '6',\n      gridWidth: '6',\n      barMargin: '0',\n      gridMargin: '0'\n    };\n  }\n\n  ngOnInit() {\n    this.view = 'days';\n    this.date = new Date();\n    this.setOptions();\n    this.initDayNames();\n    this.initYears();\n\n    // Check if 'position' property is correct\n    if (this.positions.indexOf(this.position) === -1) {\n      throw new TypeError(`ng-datepicker: invalid position property value '${this.position}' (expected: ${this.positions.join(', ')})`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('options' in changes) {\n      this.setOptions();\n      this.initDayNames();\n      this.init();\n      this.initYears();\n    }\n  }\n\n  get defaultFieldId(): string {\n    // Only evaluate and increment if required\n    const value = `datepicker-${counter++}`;\n    Object.defineProperty(this, 'defaultFieldId', {value});\n\n    return value;\n  }\n\n  setOptions(): void {\n    const today = new Date(); // this const was added because during my tests, I noticed that at this level this.date is undefined\n    this.minYear = this.options && this.options.minYear || getYear(today) - 30;\n    this.maxYear = this.options && this.options.maxYear || getYear(today) + 30;\n    this.displayFormat = this.options && this.options.displayFormat || 'MMM D[,] YYYY';\n    this.barTitleFormat = this.options && this.options.barTitleFormat || 'MMMM YYYY';\n    this.dayNamesFormat = this.options && this.options.dayNamesFormat || 'ddd';\n    this.barTitleIfEmpty = this.options && this.options.barTitleIfEmpty || 'Click to select a date';\n    this.firstCalendarDay = this.options && this.options.firstCalendarDay || 0;\n    this.locale = this.options && { locale: this.options.locale } || {};\n    this.placeholder = this.options && this.options.placeholder || '';\n    this.addClass = this.options && this.options.addClass || {};\n    this.addStyle = this.options && this.options.addStyle || {};\n    this.fieldId = this.options && this.options.fieldId || this.defaultFieldId;\n    this.useEmptyBarTitle = this.options && 'useEmptyBarTitle' in this.options ? this.options.useEmptyBarTitle : true;\n  }\n\n  nextMonth(): void {\n    this.date = addMonths(this.date, 1);\n    this.init();\n  }\n\n  prevMonth(): void {\n    this.date = subMonths(this.date, 1);\n    this.init();\n  }\n\n  setDate(i: number): void {\n    this.date = this.days[i].date;\n    this.value = this.date;\n    this.init();\n    this.close();\n  }\n\n  setYear(i: number): void {\n    this.date = setYear(this.date, this.years[i].year);\n    this.init();\n    this.initYears();\n    this.view = 'days';\n  }\n\n  /**\n   * Checks if specified date is in range of min and max dates\n   * @param date\n   */\n  private isDateSelectable(date: Date): boolean {\n    if (isNil(this.options)) {\n      return true;\n    }\n\n    const minDateSet = !isNil(this.options.minDate);\n    const maxDateSet = !isNil(this.options.maxDate);\n    const timestamp = date.valueOf();\n\n    if (minDateSet && (timestamp < this.options.minDate.valueOf())) {\n      return false;\n    }\n\n    if (maxDateSet && (timestamp > this.options.maxDate.valueOf())) {\n      return false;\n    }\n\n    return true;\n  }\n\n  init(): void {\n    // this.date may be null after .reset(); fall back to current date.\n    const actualDate = this.date || new Date();\n    const start = startOfMonth(actualDate);\n    const end = endOfMonth(actualDate);\n\n    this.days = eachDay(start, end).map(date => {\n      return {\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: true,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date)\n      };\n    });\n\n    const tmp = getDay(start) - this.firstCalendarDay;\n    const prevDays = tmp < 0 ? 7 - this.firstCalendarDay : tmp;\n\n    for (let i = 1; i <= prevDays; i++) {\n      const date = subDays(start, i);\n      this.days.unshift({\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: false,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date)\n      });\n    }\n\n    if (this.innerValue) {\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(start, this.barTitleFormat, this.locale);\n    } else {\n      this.displayValue = '';\n      this.barTitle = this.useEmptyBarTitle ? this.barTitleIfEmpty : format(start, this.barTitleFormat, this.locale);\n    }\n  }\n\n  initYears(): void {\n    const range = this.maxYear - this.minYear;\n    this.years = Array.from(new Array(range), (x, i) => i + this.minYear).map(year => {\n      return { year: year, isThisYear: year === getYear(this.date) };\n    });\n  }\n\n  initDayNames(): void {\n    this.dayNames = [];\n    const start = this.firstCalendarDay;\n    for (let i = start; i <= 6 + start; i++) {\n      const date = setDay(new Date(), i);\n      this.dayNames.push(format(date, this.dayNamesFormat, this.locale));\n    }\n  }\n\n  toggleView(): void {\n    this.view = this.view === 'days' ? 'years' : 'days';\n  }\n\n  toggle(): void {\n    this.isOpened = !this.isOpened;\n\n    if (!this.isOpened && this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  close(): void {\n    this.isOpened = false;\n\n    if (this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  reset(fireValueChangeEvent = false): void {\n    this.date = null;\n    this.innerValue = null;\n    this.init();\n    if (fireValueChangeEvent && this.onChangeCallback) {\n      this.onChangeCallback(this.innerValue);\n    }\n  }\n\n  writeValue(val: Date) {\n    if (val) {\n      this.date = val;\n      this.innerValue = val;\n      this.init();\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(startOfMonth(val), this.barTitleFormat, this.locale);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  @HostListener('document:click', ['$event']) onBlur(e: MouseEvent) {\n    if (!this.isOpened) {\n      return;\n    }\n\n    const input = this.elementRef.nativeElement.querySelector('.ngx-datepicker-input');\n\n    if (input == null) {\n      return;\n    }\n\n    if (e.target === input || input.contains(<any>e.target)) {\n      return;\n    }\n\n    const container = this.elementRef.nativeElement.querySelector('.ngx-datepicker-calendar-container');\n    if (container && container !== e.target && !container.contains(<any>e.target) && !(<any>e.target).classList.contains('year-unit')) {\n      this.close();\n    }\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
